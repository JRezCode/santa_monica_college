<!DOCTYPE html>

<!-- Name: Jonathan Reznik, 1654919
	Assignment: A06 (Building content with Javascript)
	Submission Date: 5-24-2019 -->

<!-- NOTES ABOUT ASSIGNMENT 6 -->
    	<!--1.Stretching is still occurring with the images of a single container in flexbox.  That is
		when rendering on mobile platform in Safari or Firefox the image resolution is stretched. -->

    	<!--2. For readability these various embedded script and stylesheets could also be relocated
		to a separate file. -->

    	<!--3.  The html <body> portion at the bottom includes a <header> and <footer> plus a <form> with 
    	<input> tag included, but these could have also been removed if included inside <script>  in 
    	<head> --> 

<html>
    <head>
        <title>Assignment 6 (JS+DOM)</title>
        <style type = "text/css">
            img     {
                width: 100%;
                margin:.3em; 
                padding: 4px;
                background-color:cornsilk;
            }
            
            p			{
					text-transform:uppercase;	            
            	color: grey;
            }
            
            .body   {
                font-family: arial, helvetica, sans-serif;
            }
            
            
            .main_section   {
                padding: 2px;
                background-color: black;
            }

            .header 		{
                background-color: darkgreen;
                padding: 25px;
            }

            header h1 		{ 	
                margin-top: 0px;
                font-family: tahoma, helvetica, sans-serif;
                color: beige;;
                text-decoration: outline;
                text-align: center;
                box-shadow: 15px 15px 50px yellow;
            }
            
            .buttondescription {
					color: yellow;;            
					text-transform: lowercase;
            }
            .footer         { 	
                border: 5px solid lightgreen; 
                padding: .1em;
            }
            .container    {  
                display: flex; 
                flex-wrap: wrap;
                flex: 16% 1; 
            }
            @media screen and (max-device-width: 800px)    {
                .container {flex: 33.333%; }
                .wrapper {}
            }
            @media screen and (max-device-width: 414px)    {
                .container {flex: 100%; width: 100%;}
                .wrapper {width: 100%; flex}
            }
        </style>
        <script type="text/javascript">			
			function createImageTiles() {				
				//new flexbox wrapper for layout makes use of inline css properties
				flexbox = document.createElement("div");
            flexbox.setAttribute("class", "wrapper");				
				flexbox.setAttribute("style", "display: flex; flex-wrap:wrap; justify-content: space-around; align-content: center");

				//appendChild() method to insert the newly formed element
				document.getElementsByClassName("header")[0].appendChild(flexbox);
 
            //for() loop to process the div tags
            for(i = 1; i<=6; i++){
            	div = document.createElement("div");
            	div.setAttribute("class","container");			
					//for() loop to process the img tags 
            	for(j=1; j<=3; j++){
            		img = document.createElement("img");
            		img.setAttribute("id",(i*j));					//i*j is the # of img tags for id and src attrib's 
            		img.setAttribute("src","images/assignment6/"+(i*j)+".jpg");
            		div.appendChild(img);			//appends img to container (img element to div element)
            		}
            		document.getElementsByClassName("wrapper").item(0).appendChild(div);
            		//appends the newly created element for container to the flexbox wrapper
           		}           		
           	}
            				
			var Images = ["1.jpg","2.jpg","3.jpg","4.jpg","5.jpg","6.jpg","7.jpg","8.jpg","9.jpg","10.jpg","11.jpg","12.jpg","13.jpg","14.jpg","15.jpg","16.jpg","17.jpg","18.jpg"];
			           
            //start runs at window load event            
            function start()
            {
					//call function to create structuratl elements
                createImageTiles();

					//associate existing html button with a javascript function shuffle()
                var button=document.getElementById("shuffButton");
                button.addEventListener("click", shuffle, false);

           		//finally add a text note just before the footer sourcing where images were found
                note = document.createTextNode("NOTE: The image was taken from a license-free repository, and then using ImageMagick software on a Linux computer to create alternate copies.");
                document.getElementsByClassName("header")[0].appendChild(note);           		
            }
                       
            function shuffle()
            {
				imgIndex=0;
				Location = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, -1, -1, -1, -1];		
				
				//method for reducing the array to a single value
				const reducer = (accumulator, currentValue) => accumulator + currentValue;

				//while loop over the array
				while(Location.reduce(reducer)<0)
				{
					var rand = Math.floor(Math.random()*18);
					if(Location[rand]==-1)
					{
						var imageGet = "images/assignment5/"+Images[imgIndex]
						var imageSet = document.getElementsByTagName("img")[rand]
						imageSet.setAttribute("src", imageGet);
						Location[rand]=0;
						imgIndex++;
						}
                }
                //document.write("The process is complete");
            }

            window.addEventListener("load", start, false);                            
        </script>
		
    </head>


    <body>    	 
    	<header class="header">
        <h1>Assignment 6 Dynamic content with DOM + JS</h1>
        <form action = "#">
            <input id = "shuffButton" type="button" value="Go">
        </form>
        <p class="buttondescription"> Please click to completely shuffle no duplicates.</p>
      </header>

      <footer class="footer">CS80 &copy;
      </footer>
    </body>
    
</html>

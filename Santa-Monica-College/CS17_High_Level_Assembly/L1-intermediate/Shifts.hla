program ShiftMultDiv;
#include ("stdlib.hhf");
static
unsignednum: uns16 := %0000_0000_1000_0000;  //1,048,576
signednum: int16 := %1000_1110_0110_0111;
un: uns16;
zsi: int16;	//zsi is a signed integer but si is a reserved keyword

begin ShiftMultDiv;

//Shift left and right on an unsigned data type

//Multiple by 2
mov(unsignednum,BX);
shl(1,EBX);
mov(BX,un);
stdout.put("The number ", unsignednum, " shifted left 1 bit (doubled) is : ");
stdout.putu16(un);
mov(un,unsignednum);   //Update num
stdout.newln();

//Divide by 2
shr(1,EBX);
mov(BX,un);
stdout.put("The number ", unsignednum, " shifted right 1 bit (halved) is : ");
stdout.putu16(un);
stdout.newln();

//Show shift right will not work on a signed integer
mov(signednum,CX);
shr(1,ECX);
mov(CX,zsi);
stdout.put("The signed number ", signednum, " shifted right 1 bit (is incorrect/wrong): ");
stdout.puti16(zsi);
stdout.newln();

//Arithmetic shift right for signed integer
stdout.put("For signed number ", signednum);
sar(1,signednum);
stdout.put(" the arithmetic shift right is (half): ", signednum);
stdout.newln();


end ShiftMultDiv;
